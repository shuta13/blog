{
  "title": "Nuxt + v-lazy-imageで楽に画像遅延読み込み",
  "created_at": "2019-08-12T00:00:00.000Z",
  "tags": [
    "web",
    "vue/nuxt",
    "plugin"
  ],
  "category": "develop",
  "bodyContent": "*画像遅延読み込み on Nuxt(Vue) をしたい！しないとオワになっちまう！！ア゛！！！* という感じのとき（私は違いますが...）に、それをいい感じにやってくれるpluginの紹介です\n\n<br>\n\n## v-lazy-image\n\n<br>\n\n> 👉 <a target=\"_blank\" href=\"https://github.com/alexjoverm/v-lazy-image\">github</a>\n\n> 👉 <a target=\"_blank\" href=\"https://www.npmjs.com/package/v-lazy-image\">npm</a>\n\n<br>\n\nなんか、<a target=\"_blank\" href=\"\">vue-lazyload</a>を勧めてくる方もいるんですが、僕はこっちの方がよりシンプルでわかりやすかったので `v-lazy-image` を使っています\n\n<br>\n\n＊＊＊\n\n<br>\n\n### 導入\n\n1. **インストール**\n\n```bash\nyarn add v-lazy-image\n```\n\n<br>\n\n>>> POINT 👉 *みんな yarn 使っとる、npm なんか使っとるの、お前だけ*\n\n<br>\n\n2. **下ごしらえ**\n\n<a target=\"_blank\" href=\"https://github.com/alexjoverm/v-lazy-image/blob/master/README.md\">公式のREADME</a> 見ればわかるんですが一応。\n\n今回は `Nuxt.js` での場合を想定して進めていきます\n\n<br>\n\n- どこからでも使いたいとき\n\n`plugin/` に `vue-lazy-image.js` みたいな名前のファイルを用意してその中に以下を記述\n\n```javascript\nimport Vue from \"vue\"\nimport { VLazyImagePlugin } from \"v-lazy-image\"\n\nVue.use(VLazyImagePlugin)\n```\n\n`nuxt.config.js` に以下を追加\n\n```javascript\n// ~\nplugins: [\n    '~/plugins/v-lazy-image'\n]\n// ~\n```\n\n<br>\n\n- その場でのみ使う\n\n`v-lazy-image` を使いたいsfcの `script` タグ内に以下を記述\n\n```javascript\nimport VLazyImage from \"v-lazy-image\"\n\nexport default {\n  components: {\n    VLazyImage\n  }\n}\n```\n\n<br>\n\n3. **つかう**\n\nあとは `template` タグの中でこんな感じに書けば使える\n\n```html\n<template>\n  <v-lazy-image src=\"https://did0es.me/images/hoge.jpg\">\n</template>\n```\n\n<br>\n\nただのコンポーネントと同じ感じの扱いです、簡単さはうれしさ\n\n<br>\n\n### アレコレ機能\n\nこれが本命な感じなのですが、遅延読み込みした画像に対して簡単にstyleで諸々エフェクト的なのが付けられます\n\n<br>\n\n`v-lazy-image` タグで囲うと以下\n\n```css\n.v-lazy-image\n.v-lazy-image-loaded\n```\n\nの2クラスが追加されます。\n\n<br>\n\n`.v-lazy-image` は画像が読み込まれる前、 `v-lazy-image-loaded` は読み込まれた後、見たまんまです\n\n<br>\n\n `transition` とかと組み合わせるといい感じにこの間を補完できます(アニメーションがついてうれしくなります)\n\n僕はこんな感じにして使っていました\n\n```css\n.v-lazy-image {\n  opacity: 0;\n  transition: opacity .4s;\n}\n.v-lazy-image-loaded {\n  opacity: 1;\n}\n```\n\n非常に単純なんですが結構いい感じに画像が表示されるようになります\n\n<br>\n\n### 所感\n\n- `v-lazy-image` タグで表示したい画像は `src=\"\"` \bで読み込んであげないとアになってしまう\n  - `:style=\"{'background': 'url(/images/hoge.jpg)'}\"` では `src`が無いんだよこのカス！ って怒られが発生します(した)\n\n<br>\n\n- 結局、 `v-lazy-image` だと楽に僕がやりたかったことができて *LOVE...* となったけど `vue-lazyload` が使いこなせてなかっただけかもしれません\n  - こっちの方がいいぞ とか `vue-lazyload` はもっとこんなことができるよ 的なのがあったら是非教えて下さい( 石を投げる的→<a target=\"_blank\" href=\"https://twitter.com/did0es\">@did0es</a> )\n\n<br>",
  "bodyHtml": "<p><em>画像遅延読み込み on Nuxt(Vue) をしたい！しないとオワになっちまう！！ア゛！！！</em> という感じのとき（私は違いますが...）に、それをいい感じにやってくれるpluginの紹介です</p>\n<br>\n<h2>v-lazy-image</h2>\n<br>\n<blockquote>\n<p>👉 <a target=\"_blank\" href=\"https://github.com/alexjoverm/v-lazy-image\">github</a></p>\n</blockquote>\n<blockquote>\n<p>👉 <a target=\"_blank\" href=\"https://www.npmjs.com/package/v-lazy-image\">npm</a></p>\n</blockquote>\n<br>\n<p>なんか、<a target=\"_blank\" href=\"\">vue-lazyload</a>を勧めてくる方もいるんですが、僕はこっちの方がよりシンプルでわかりやすかったので <code>v-lazy-image</code> を使っています</p>\n<br>\n<p>＊＊＊</p>\n<br>\n<h3>導入</h3>\n<ol>\n<li><strong>インストール</strong></li>\n</ol>\n<pre><code class=\"hljs\">yarn add v-lazy-image</code></pre><br>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>POINT 👉 <em>みんな yarn 使っとる、npm なんか使っとるの、お前だけ</em></p>\n</blockquote>\n</blockquote>\n</blockquote>\n<br>\n<ol start=\"2\">\n<li><strong>下ごしらえ</strong></li>\n</ol>\n<p><a target=\"_blank\" href=\"https://github.com/alexjoverm/v-lazy-image/blob/master/README.md\">公式のREADME</a> 見ればわかるんですが一応。</p>\n<p>今回は <code>Nuxt.js</code> での場合を想定して進めていきます</p>\n<br>\n<ul>\n<li>どこからでも使いたいとき</li>\n</ul>\n<p><code>plugin/</code> に <code>vue-lazy-image.js</code> みたいな名前のファイルを用意してその中に以下を記述</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"vue\"</span>\n<span class=\"hljs-keyword\">import</span> { VLazyImagePlugin } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"v-lazy-image\"</span>\n\nVue.use(VLazyImagePlugin)</code></pre><p><code>nuxt.config.js</code> に以下を追加</p>\n<pre><code class=\"hljs\"><span class=\"hljs-comment\">// ~</span>\nplugins: [\n    <span class=\"hljs-string\">'~/plugins/v-lazy-image'</span>\n]\n<span class=\"hljs-comment\">// ~</span></code></pre><br>\n<ul>\n<li>その場でのみ使う</li>\n</ul>\n<p><code>v-lazy-image</code> を使いたいsfcの <code>script</code> タグ内に以下を記述</p>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">import</span> VLazyImage <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"v-lazy-image\"</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">components</span>: {\n    VLazyImage\n  }\n}</code></pre><br>\n<ol start=\"3\">\n<li><strong>つかう</strong></li>\n</ol>\n<p>あとは <code>template</code> タグの中でこんな感じに書けば使える</p>\n<pre><code class=\"hljs\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">v-lazy-image</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://did0es.me/images/hoge.jpg\"</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span></code></pre><br>\n<p>ただのコンポーネントと同じ感じの扱いです、簡単さはうれしさ</p>\n<br>\n<h3>アレコレ機能</h3>\n<p>これが本命な感じなのですが、遅延読み込みした画像に対して簡単にstyleで諸々エフェクト的なのが付けられます</p>\n<br>\n<p><code>v-lazy-image</code> タグで囲うと以下</p>\n<pre><code class=\"hljs\"><span class=\"hljs-selector-class\">.v-lazy-image</span>\n<span class=\"hljs-selector-class\">.v-lazy-image-loaded</span></code></pre><p>の2クラスが追加されます。</p>\n<br>\n<p><code>.v-lazy-image</code> は画像が読み込まれる前、 <code>v-lazy-image-loaded</code> は読み込まれた後、見たまんまです</p>\n<br>\n<p><code>transition</code> とかと組み合わせるといい感じにこの間を補完できます(アニメーションがついてうれしくなります)</p>\n<p>僕はこんな感じにして使っていました</p>\n<pre><code class=\"hljs\"><span class=\"hljs-selector-class\">.v-lazy-image</span> {\n  <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">transition</span>: opacity .<span class=\"hljs-number\">4s</span>;\n}\n<span class=\"hljs-selector-class\">.v-lazy-image-loaded</span> {\n  <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">1</span>;\n}</code></pre><p>非常に単純なんですが結構いい感じに画像が表示されるようになります</p>\n<br>\n<h3>所感</h3>\n<ul>\n<li><code>v-lazy-image</code> タグで表示したい画像は <code>src=&quot;&quot;</code> \bで読み込んであげないとアになってしまう\n<ul>\n<li><code>:style=&quot;{'background': 'url(/images/hoge.jpg)'}&quot;</code> では <code>src</code>が無いんだよこのカス！ って怒られが発生します(した)</li>\n</ul>\n</li>\n</ul>\n<br>\n<ul>\n<li>結局、 <code>v-lazy-image</code> だと楽に僕がやりたかったことができて <em>LOVE...</em> となったけど <code>vue-lazyload</code> が使いこなせてなかっただけかもしれません\n<ul>\n<li>こっちの方がいいぞ とか <code>vue-lazyload</code> はもっとこんなことができるよ 的なのがあったら是非教えて下さい( 石を投げる的→<a target=\"_blank\" href=\"https://twitter.com/did0es\">@did0es</a> )</li>\n</ul>\n</li>\n</ul>\n<br>",
  "dir": "src/contents/json",
  "base": "2019-08-12-nuxt-lazy-image.json",
  "ext": ".json",
  "sourceBase": "2019-08-12-nuxt-lazy-image.md",
  "sourceExt": ".md"
}